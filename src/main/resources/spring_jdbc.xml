<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- 开启Spring注解 -->
	<context:annotation-config />
	<!-- 指定Spring注解的扫描路径，指定大包 -->
	<context:component-scan base-package="com.wzn" />

	<!-- 引入MySql连接配置文件 -->
	<!-- <bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:Druid.properties" />
	</bean> -->
	<!-- 读取数据库连接池配置文件 -->
	<context:property-placeholder location="classpath:Druid.properties" />

	<!-- Druid连接池的配置 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${jdbc.url}" />
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${initialSize}" />
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${maxActive}" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${minIdle}" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${maxWait}" />
	</bean>

	<!-- 使用spring加载MyBatis配置文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 连接池对象 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 绑定Mybatis的配置文件 -->
		<property name="configLocation" value="classpath:mybatis.cfg.xml" />
		<!-- 自动扫描mapping.xml文件 如果指定的路径下没有映射文件，启动会失败 -->
		<!-- <property name="mapperLocations" value="classpath:com/wzn/mapper/*.xml" 
			/> -->
	</bean>

	<!-- 配置SqlSession -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<!-- 使用Spring扫描映射接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.wzn.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>

	<!-- 事务管理 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 设置事务作用范围，应用了AOP的通知，绑定使用的事务管理对象 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<!-- 设置作用范围 -->
		<tx:attributes>
			<!-- 设置作用范围，也就是说，哪一些方法，需要使用到事务 -->
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception" />
			<!-- 不使用事务 -->
			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	<!-- 使用AOP来织入事务 -->
	<aop:config proxy-target-class="true">
       	<!-- 配置AOP通知的切入点 一般情况下都会定位在Service层 -->
      	<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.wzn.service..*.*(..))"/>
    </aop:config>

</beans>


